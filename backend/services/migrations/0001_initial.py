# Generated by Django 5.0.2 on 2024-03-31 17:09

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=20, verbose_name="название категории"),
                ),
                ("slug", models.SlugField(max_length=255, unique=True)),
                (
                    "description",
                    models.CharField(max_length=250, verbose_name="описание категории"),
                ),
                (
                    "icon",
                    models.ImageField(
                        blank=True,
                        default=None,
                        upload_to="category/images/",
                        verbose_name="Фото категории",
                    ),
                ),
            ],
            options={
                "verbose_name": "Категория",
                "verbose_name_plural": "Категории",
            },
        ),
        migrations.CreateModel(
            name="SubscriptionPayment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Services",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=250, verbose_name="название")),
                (
                    "link",
                    models.URLField(
                        blank=True, max_length=400, null=True, verbose_name="ссылка"
                    ),
                ),
                ("description", models.TextField(verbose_name="описание")),
                (
                    "icon_big",
                    models.ImageField(
                        blank=True,
                        default=None,
                        upload_to="services/images/",
                        verbose_name="Иконка сервиса большая",
                    ),
                ),
                (
                    "icon_square",
                    models.ImageField(
                        blank=True,
                        default=None,
                        upload_to="services/images/",
                        verbose_name="Иконка сервиса квадратная",
                    ),
                ),
                (
                    "icon_small",
                    models.ImageField(
                        blank=True,
                        default=None,
                        upload_to="services/images/",
                        verbose_name="Иконка сервиса маленькая",
                    ),
                ),
                (
                    "is_popular",
                    models.BooleanField(
                        default=False,
                        max_length=250,
                        verbose_name="Популярность сервиса",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="services.category",
                        verbose_name="категория",
                    ),
                ),
            ],
            options={
                "verbose_name": "Сервис",
                "verbose_name_plural": "Сервисы",
            },
        ),
        migrations.CreateModel(
            name="TariffList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=250, verbose_name="название тарифа"),
                ),
                (
                    "description",
                    models.CharField(max_length=250, verbose_name="описание тарифа"),
                ),
                (
                    "services_duration",
                    models.CharField(
                        choices=[
                            ("1", "Один месяц"),
                            ("3", "Три месяца"),
                            ("6", "Шесть месяцев"),
                            ("12", "Один год"),
                        ],
                        default="1",
                        max_length=20,
                        verbose_name="длительность тарифа",
                    ),
                ),
                (
                    "tariff_full_price",
                    models.FloatField(verbose_name="полная стоимость тарифа"),
                ),
                (
                    "tariff_promo_price",
                    models.FloatField(verbose_name="промо стоимость тарифа"),
                ),
                (
                    "services",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tarifflists",
                        to="services.services",
                        verbose_name="сервис",
                    ),
                ),
            ],
            options={
                "verbose_name": "Тариф",
                "verbose_name_plural": "Тарифы",
            },
        ),
        migrations.CreateModel(
            name="Subscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Подписка активна?"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="subscriptions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tariff",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="subscriptions",
                        to="services.tarifflist",
                    ),
                ),
            ],
            options={
                "verbose_name": "Подписка на сервис",
                "verbose_name_plural": "Подписки на сервисы",
                "ordering": ("user",),
            },
        ),
        migrations.AddConstraint(
            model_name="subscription",
            constraint=models.UniqueConstraint(
                fields=("user", "tariff"), name="unique_user_tariff"
            ),
        ),
    ]
